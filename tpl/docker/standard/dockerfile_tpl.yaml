path: Dockerfile
body: |-
      FROM golang:{{.Version}}alpine AS builder
      
      LABEL stage=gobuilder
      
      ENV CGO_ENABLED=0

      {{if .Mirrors}}ENV GOPROXY=https://goproxy.cn,direct
      RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories
      {{end}}{{if .Timezone}}
      RUN apk update --no-cache && apk add --no-cache tzdata
      {{end}}
      WORKDIR /build
      
      ADD go.mod .
      ADD go.sum .
      RUN go mod download

      COPY . .
      {{if .EtcDirs}}{{range .EtcDirs}}COPY {{.}} /app/{{.}}
      {{end}}{{end}}
      
      RUN go build -ldflags="-s -w" -o /app/{{.ExeFile}} {{.GoMainFrom}}
      
      
      FROM {{.BaseImage}}
      
      COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
      {{if .Timezone}}COPY --from=builder /usr/share/zoneinfo/{{.Timezone}} /usr/share/zoneinfo/{{.Timezone}}
      ENV TZ={{.Timezone}}
      {{end}}

      WORKDIR /app
      COPY --from=builder /app/{{.ExeFile}} /app/{{.ExeFile}}
      {{if .EtcDirs}}{{range .EtcDirs}}COPY  --from=builder /app/{{.}} /app/{{.}}
      {{end}}{{end}}
      
      {{if .Port}}EXPOSE {{.Port}}
      {{end}}
      
      CMD ["./{{.ExeFile}}"{{.Argument}}]
