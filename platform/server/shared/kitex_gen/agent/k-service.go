// Code generated by Kitex v0.8.0. DO NOT EDIT.

package agent

import (
	"bytes"
	"fmt"
	"reflect"
	"strings"

	"github.com/apache/thrift/lib/go/thrift"
)

// unused protection
var (
	_ = fmt.Formatter(nil)
	_ = (*bytes.Buffer)(nil)
	_ = (*strings.Builder)(nil)
	_ = reflect.Type(nil)
	_ = thrift.TProtocol(nil)
)

type AgentServiceAddRepositoryArgs struct {
	Req *AddRepositoryReq `thrift:"req,1" frugal:"1,default,AddRepositoryReq" json:"req"`
}

func NewAgentServiceAddRepositoryArgs() *AgentServiceAddRepositoryArgs {
	return &AgentServiceAddRepositoryArgs{}
}

func (p *AgentServiceAddRepositoryArgs) InitDefault() {
	*p = AgentServiceAddRepositoryArgs{}
}

var AgentServiceAddRepositoryArgs_Req_DEFAULT *AddRepositoryReq

func (p *AgentServiceAddRepositoryArgs) GetReq() (v *AddRepositoryReq) {
	if !p.IsSetReq() {
		return AgentServiceAddRepositoryArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceAddRepositoryArgs) SetReq(val *AddRepositoryReq) {
	p.Req = val
}

func (p *AgentServiceAddRepositoryArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceAddRepositoryArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAddRepositoryArgs(%+v)", *p)
}
func (p *AgentServiceAddRepositoryArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceAddRepositoryResult struct {
	Success *AddRepositoryRes `thrift:"success,0,optional" frugal:"0,optional,AddRepositoryRes" json:"success,omitempty"`
}

func NewAgentServiceAddRepositoryResult() *AgentServiceAddRepositoryResult {
	return &AgentServiceAddRepositoryResult{}
}

func (p *AgentServiceAddRepositoryResult) InitDefault() {
	*p = AgentServiceAddRepositoryResult{}
}

var AgentServiceAddRepositoryResult_Success_DEFAULT *AddRepositoryRes

func (p *AgentServiceAddRepositoryResult) GetSuccess() (v *AddRepositoryRes) {
	if !p.IsSetSuccess() {
		return AgentServiceAddRepositoryResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceAddRepositoryResult) SetSuccess(x interface{}) {
	p.Success = x.(*AddRepositoryRes)
}

func (p *AgentServiceAddRepositoryResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceAddRepositoryResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAddRepositoryResult(%+v)", *p)
}
func (p *AgentServiceAddRepositoryResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceDeleteRepositoriesArgs struct {
	Req *DeleteRepositoriesReq `thrift:"req,1" frugal:"1,default,DeleteRepositoriesReq" json:"req"`
}

func NewAgentServiceDeleteRepositoriesArgs() *AgentServiceDeleteRepositoriesArgs {
	return &AgentServiceDeleteRepositoriesArgs{}
}

func (p *AgentServiceDeleteRepositoriesArgs) InitDefault() {
	*p = AgentServiceDeleteRepositoriesArgs{}
}

var AgentServiceDeleteRepositoriesArgs_Req_DEFAULT *DeleteRepositoriesReq

func (p *AgentServiceDeleteRepositoriesArgs) GetReq() (v *DeleteRepositoriesReq) {
	if !p.IsSetReq() {
		return AgentServiceDeleteRepositoriesArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceDeleteRepositoriesArgs) SetReq(val *DeleteRepositoriesReq) {
	p.Req = val
}

func (p *AgentServiceDeleteRepositoriesArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceDeleteRepositoriesArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceDeleteRepositoriesArgs(%+v)", *p)
}
func (p *AgentServiceDeleteRepositoriesArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceDeleteRepositoriesResult struct {
	Success *DeleteRepositoriesRes `thrift:"success,0,optional" frugal:"0,optional,DeleteRepositoriesRes" json:"success,omitempty"`
}

func NewAgentServiceDeleteRepositoriesResult() *AgentServiceDeleteRepositoriesResult {
	return &AgentServiceDeleteRepositoriesResult{}
}

func (p *AgentServiceDeleteRepositoriesResult) InitDefault() {
	*p = AgentServiceDeleteRepositoriesResult{}
}

var AgentServiceDeleteRepositoriesResult_Success_DEFAULT *DeleteRepositoriesRes

func (p *AgentServiceDeleteRepositoriesResult) GetSuccess() (v *DeleteRepositoriesRes) {
	if !p.IsSetSuccess() {
		return AgentServiceDeleteRepositoriesResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceDeleteRepositoriesResult) SetSuccess(x interface{}) {
	p.Success = x.(*DeleteRepositoriesRes)
}

func (p *AgentServiceDeleteRepositoriesResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceDeleteRepositoriesResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceDeleteRepositoriesResult(%+v)", *p)
}
func (p *AgentServiceDeleteRepositoriesResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceUpdateRepositoryArgs struct {
	Req *UpdateRepositoryReq `thrift:"req,1" frugal:"1,default,UpdateRepositoryReq" json:"req"`
}

func NewAgentServiceUpdateRepositoryArgs() *AgentServiceUpdateRepositoryArgs {
	return &AgentServiceUpdateRepositoryArgs{}
}

func (p *AgentServiceUpdateRepositoryArgs) InitDefault() {
	*p = AgentServiceUpdateRepositoryArgs{}
}

var AgentServiceUpdateRepositoryArgs_Req_DEFAULT *UpdateRepositoryReq

func (p *AgentServiceUpdateRepositoryArgs) GetReq() (v *UpdateRepositoryReq) {
	if !p.IsSetReq() {
		return AgentServiceUpdateRepositoryArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceUpdateRepositoryArgs) SetReq(val *UpdateRepositoryReq) {
	p.Req = val
}

func (p *AgentServiceUpdateRepositoryArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceUpdateRepositoryArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceUpdateRepositoryArgs(%+v)", *p)
}
func (p *AgentServiceUpdateRepositoryArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceUpdateRepositoryResult struct {
	Success *UpdateRepositoryRes `thrift:"success,0,optional" frugal:"0,optional,UpdateRepositoryRes" json:"success,omitempty"`
}

func NewAgentServiceUpdateRepositoryResult() *AgentServiceUpdateRepositoryResult {
	return &AgentServiceUpdateRepositoryResult{}
}

func (p *AgentServiceUpdateRepositoryResult) InitDefault() {
	*p = AgentServiceUpdateRepositoryResult{}
}

var AgentServiceUpdateRepositoryResult_Success_DEFAULT *UpdateRepositoryRes

func (p *AgentServiceUpdateRepositoryResult) GetSuccess() (v *UpdateRepositoryRes) {
	if !p.IsSetSuccess() {
		return AgentServiceUpdateRepositoryResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceUpdateRepositoryResult) SetSuccess(x interface{}) {
	p.Success = x.(*UpdateRepositoryRes)
}

func (p *AgentServiceUpdateRepositoryResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceUpdateRepositoryResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceUpdateRepositoryResult(%+v)", *p)
}
func (p *AgentServiceUpdateRepositoryResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceGetRepositoriesArgs struct {
	Req *GetRepositoriesReq `thrift:"req,1" frugal:"1,default,GetRepositoriesReq" json:"req"`
}

func NewAgentServiceGetRepositoriesArgs() *AgentServiceGetRepositoriesArgs {
	return &AgentServiceGetRepositoriesArgs{}
}

func (p *AgentServiceGetRepositoriesArgs) InitDefault() {
	*p = AgentServiceGetRepositoriesArgs{}
}

var AgentServiceGetRepositoriesArgs_Req_DEFAULT *GetRepositoriesReq

func (p *AgentServiceGetRepositoriesArgs) GetReq() (v *GetRepositoriesReq) {
	if !p.IsSetReq() {
		return AgentServiceGetRepositoriesArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceGetRepositoriesArgs) SetReq(val *GetRepositoriesReq) {
	p.Req = val
}

func (p *AgentServiceGetRepositoriesArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceGetRepositoriesArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetRepositoriesArgs(%+v)", *p)
}
func (p *AgentServiceGetRepositoriesArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceGetRepositoriesResult struct {
	Success *GetRepositoriesRes `thrift:"success,0,optional" frugal:"0,optional,GetRepositoriesRes" json:"success,omitempty"`
}

func NewAgentServiceGetRepositoriesResult() *AgentServiceGetRepositoriesResult {
	return &AgentServiceGetRepositoriesResult{}
}

func (p *AgentServiceGetRepositoriesResult) InitDefault() {
	*p = AgentServiceGetRepositoriesResult{}
}

var AgentServiceGetRepositoriesResult_Success_DEFAULT *GetRepositoriesRes

func (p *AgentServiceGetRepositoriesResult) GetSuccess() (v *GetRepositoriesRes) {
	if !p.IsSetSuccess() {
		return AgentServiceGetRepositoriesResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceGetRepositoriesResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetRepositoriesRes)
}

func (p *AgentServiceGetRepositoriesResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceGetRepositoriesResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetRepositoriesResult(%+v)", *p)
}
func (p *AgentServiceGetRepositoriesResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceAddIDLArgs struct {
	Req *AddIDLReq `thrift:"req,1" frugal:"1,default,AddIDLReq" json:"req"`
}

func NewAgentServiceAddIDLArgs() *AgentServiceAddIDLArgs {
	return &AgentServiceAddIDLArgs{}
}

func (p *AgentServiceAddIDLArgs) InitDefault() {
	*p = AgentServiceAddIDLArgs{}
}

var AgentServiceAddIDLArgs_Req_DEFAULT *AddIDLReq

func (p *AgentServiceAddIDLArgs) GetReq() (v *AddIDLReq) {
	if !p.IsSetReq() {
		return AgentServiceAddIDLArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceAddIDLArgs) SetReq(val *AddIDLReq) {
	p.Req = val
}

func (p *AgentServiceAddIDLArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceAddIDLArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAddIDLArgs(%+v)", *p)
}
func (p *AgentServiceAddIDLArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceAddIDLResult struct {
	Success *AddIDLRes `thrift:"success,0,optional" frugal:"0,optional,AddIDLRes" json:"success,omitempty"`
}

func NewAgentServiceAddIDLResult() *AgentServiceAddIDLResult {
	return &AgentServiceAddIDLResult{}
}

func (p *AgentServiceAddIDLResult) InitDefault() {
	*p = AgentServiceAddIDLResult{}
}

var AgentServiceAddIDLResult_Success_DEFAULT *AddIDLRes

func (p *AgentServiceAddIDLResult) GetSuccess() (v *AddIDLRes) {
	if !p.IsSetSuccess() {
		return AgentServiceAddIDLResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceAddIDLResult) SetSuccess(x interface{}) {
	p.Success = x.(*AddIDLRes)
}

func (p *AgentServiceAddIDLResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceAddIDLResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAddIDLResult(%+v)", *p)
}
func (p *AgentServiceAddIDLResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceDeleteIDLArgs struct {
	Req *DeleteIDLsReq `thrift:"req,1" frugal:"1,default,DeleteIDLsReq" json:"req"`
}

func NewAgentServiceDeleteIDLArgs() *AgentServiceDeleteIDLArgs {
	return &AgentServiceDeleteIDLArgs{}
}

func (p *AgentServiceDeleteIDLArgs) InitDefault() {
	*p = AgentServiceDeleteIDLArgs{}
}

var AgentServiceDeleteIDLArgs_Req_DEFAULT *DeleteIDLsReq

func (p *AgentServiceDeleteIDLArgs) GetReq() (v *DeleteIDLsReq) {
	if !p.IsSetReq() {
		return AgentServiceDeleteIDLArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceDeleteIDLArgs) SetReq(val *DeleteIDLsReq) {
	p.Req = val
}

func (p *AgentServiceDeleteIDLArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceDeleteIDLArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceDeleteIDLArgs(%+v)", *p)
}
func (p *AgentServiceDeleteIDLArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceDeleteIDLResult struct {
	Success *DeleteIDLsRes `thrift:"success,0,optional" frugal:"0,optional,DeleteIDLsRes" json:"success,omitempty"`
}

func NewAgentServiceDeleteIDLResult() *AgentServiceDeleteIDLResult {
	return &AgentServiceDeleteIDLResult{}
}

func (p *AgentServiceDeleteIDLResult) InitDefault() {
	*p = AgentServiceDeleteIDLResult{}
}

var AgentServiceDeleteIDLResult_Success_DEFAULT *DeleteIDLsRes

func (p *AgentServiceDeleteIDLResult) GetSuccess() (v *DeleteIDLsRes) {
	if !p.IsSetSuccess() {
		return AgentServiceDeleteIDLResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceDeleteIDLResult) SetSuccess(x interface{}) {
	p.Success = x.(*DeleteIDLsRes)
}

func (p *AgentServiceDeleteIDLResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceDeleteIDLResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceDeleteIDLResult(%+v)", *p)
}
func (p *AgentServiceDeleteIDLResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceUpdateIDLArgs struct {
	Req *UpdateIDLReq `thrift:"req,1" frugal:"1,default,UpdateIDLReq" json:"req"`
}

func NewAgentServiceUpdateIDLArgs() *AgentServiceUpdateIDLArgs {
	return &AgentServiceUpdateIDLArgs{}
}

func (p *AgentServiceUpdateIDLArgs) InitDefault() {
	*p = AgentServiceUpdateIDLArgs{}
}

var AgentServiceUpdateIDLArgs_Req_DEFAULT *UpdateIDLReq

func (p *AgentServiceUpdateIDLArgs) GetReq() (v *UpdateIDLReq) {
	if !p.IsSetReq() {
		return AgentServiceUpdateIDLArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceUpdateIDLArgs) SetReq(val *UpdateIDLReq) {
	p.Req = val
}

func (p *AgentServiceUpdateIDLArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceUpdateIDLArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceUpdateIDLArgs(%+v)", *p)
}
func (p *AgentServiceUpdateIDLArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceUpdateIDLResult struct {
	Success *UpdateIDLRes `thrift:"success,0,optional" frugal:"0,optional,UpdateIDLRes" json:"success,omitempty"`
}

func NewAgentServiceUpdateIDLResult() *AgentServiceUpdateIDLResult {
	return &AgentServiceUpdateIDLResult{}
}

func (p *AgentServiceUpdateIDLResult) InitDefault() {
	*p = AgentServiceUpdateIDLResult{}
}

var AgentServiceUpdateIDLResult_Success_DEFAULT *UpdateIDLRes

func (p *AgentServiceUpdateIDLResult) GetSuccess() (v *UpdateIDLRes) {
	if !p.IsSetSuccess() {
		return AgentServiceUpdateIDLResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceUpdateIDLResult) SetSuccess(x interface{}) {
	p.Success = x.(*UpdateIDLRes)
}

func (p *AgentServiceUpdateIDLResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceUpdateIDLResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceUpdateIDLResult(%+v)", *p)
}
func (p *AgentServiceUpdateIDLResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceGetIDLsArgs struct {
	Req *GetIDLsReq `thrift:"req,1" frugal:"1,default,GetIDLsReq" json:"req"`
}

func NewAgentServiceGetIDLsArgs() *AgentServiceGetIDLsArgs {
	return &AgentServiceGetIDLsArgs{}
}

func (p *AgentServiceGetIDLsArgs) InitDefault() {
	*p = AgentServiceGetIDLsArgs{}
}

var AgentServiceGetIDLsArgs_Req_DEFAULT *GetIDLsReq

func (p *AgentServiceGetIDLsArgs) GetReq() (v *GetIDLsReq) {
	if !p.IsSetReq() {
		return AgentServiceGetIDLsArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceGetIDLsArgs) SetReq(val *GetIDLsReq) {
	p.Req = val
}

func (p *AgentServiceGetIDLsArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceGetIDLsArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetIDLsArgs(%+v)", *p)
}
func (p *AgentServiceGetIDLsArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceGetIDLsResult struct {
	Success *GetIDLsRes `thrift:"success,0,optional" frugal:"0,optional,GetIDLsRes" json:"success,omitempty"`
}

func NewAgentServiceGetIDLsResult() *AgentServiceGetIDLsResult {
	return &AgentServiceGetIDLsResult{}
}

func (p *AgentServiceGetIDLsResult) InitDefault() {
	*p = AgentServiceGetIDLsResult{}
}

var AgentServiceGetIDLsResult_Success_DEFAULT *GetIDLsRes

func (p *AgentServiceGetIDLsResult) GetSuccess() (v *GetIDLsRes) {
	if !p.IsSetSuccess() {
		return AgentServiceGetIDLsResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceGetIDLsResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetIDLsRes)
}

func (p *AgentServiceGetIDLsResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceGetIDLsResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetIDLsResult(%+v)", *p)
}
func (p *AgentServiceGetIDLsResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceSyncIDLsByIdArgs struct {
	Req *SyncIDLsByIdReq `thrift:"req,1" frugal:"1,default,SyncIDLsByIdReq" json:"req"`
}

func NewAgentServiceSyncIDLsByIdArgs() *AgentServiceSyncIDLsByIdArgs {
	return &AgentServiceSyncIDLsByIdArgs{}
}

func (p *AgentServiceSyncIDLsByIdArgs) InitDefault() {
	*p = AgentServiceSyncIDLsByIdArgs{}
}

var AgentServiceSyncIDLsByIdArgs_Req_DEFAULT *SyncIDLsByIdReq

func (p *AgentServiceSyncIDLsByIdArgs) GetReq() (v *SyncIDLsByIdReq) {
	if !p.IsSetReq() {
		return AgentServiceSyncIDLsByIdArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceSyncIDLsByIdArgs) SetReq(val *SyncIDLsByIdReq) {
	p.Req = val
}

func (p *AgentServiceSyncIDLsByIdArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceSyncIDLsByIdArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceSyncIDLsByIdArgs(%+v)", *p)
}
func (p *AgentServiceSyncIDLsByIdArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceSyncIDLsByIdResult struct {
	Success *SyncIDLsByIdRes `thrift:"success,0,optional" frugal:"0,optional,SyncIDLsByIdRes" json:"success,omitempty"`
}

func NewAgentServiceSyncIDLsByIdResult() *AgentServiceSyncIDLsByIdResult {
	return &AgentServiceSyncIDLsByIdResult{}
}

func (p *AgentServiceSyncIDLsByIdResult) InitDefault() {
	*p = AgentServiceSyncIDLsByIdResult{}
}

var AgentServiceSyncIDLsByIdResult_Success_DEFAULT *SyncIDLsByIdRes

func (p *AgentServiceSyncIDLsByIdResult) GetSuccess() (v *SyncIDLsByIdRes) {
	if !p.IsSetSuccess() {
		return AgentServiceSyncIDLsByIdResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceSyncIDLsByIdResult) SetSuccess(x interface{}) {
	p.Success = x.(*SyncIDLsByIdRes)
}

func (p *AgentServiceSyncIDLsByIdResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceSyncIDLsByIdResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceSyncIDLsByIdResult(%+v)", *p)
}
func (p *AgentServiceSyncIDLsByIdResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceAddTemplateArgs struct {
	Req *AddTemplateReq `thrift:"req,1" frugal:"1,default,AddTemplateReq" json:"req"`
}

func NewAgentServiceAddTemplateArgs() *AgentServiceAddTemplateArgs {
	return &AgentServiceAddTemplateArgs{}
}

func (p *AgentServiceAddTemplateArgs) InitDefault() {
	*p = AgentServiceAddTemplateArgs{}
}

var AgentServiceAddTemplateArgs_Req_DEFAULT *AddTemplateReq

func (p *AgentServiceAddTemplateArgs) GetReq() (v *AddTemplateReq) {
	if !p.IsSetReq() {
		return AgentServiceAddTemplateArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceAddTemplateArgs) SetReq(val *AddTemplateReq) {
	p.Req = val
}

func (p *AgentServiceAddTemplateArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceAddTemplateArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAddTemplateArgs(%+v)", *p)
}
func (p *AgentServiceAddTemplateArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceAddTemplateResult struct {
	Success *AddTemplateRes `thrift:"success,0,optional" frugal:"0,optional,AddTemplateRes" json:"success,omitempty"`
}

func NewAgentServiceAddTemplateResult() *AgentServiceAddTemplateResult {
	return &AgentServiceAddTemplateResult{}
}

func (p *AgentServiceAddTemplateResult) InitDefault() {
	*p = AgentServiceAddTemplateResult{}
}

var AgentServiceAddTemplateResult_Success_DEFAULT *AddTemplateRes

func (p *AgentServiceAddTemplateResult) GetSuccess() (v *AddTemplateRes) {
	if !p.IsSetSuccess() {
		return AgentServiceAddTemplateResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceAddTemplateResult) SetSuccess(x interface{}) {
	p.Success = x.(*AddTemplateRes)
}

func (p *AgentServiceAddTemplateResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceAddTemplateResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAddTemplateResult(%+v)", *p)
}
func (p *AgentServiceAddTemplateResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceDeleteTemplateArgs struct {
	Req *DeleteTemplateReq `thrift:"req,1" frugal:"1,default,DeleteTemplateReq" json:"req"`
}

func NewAgentServiceDeleteTemplateArgs() *AgentServiceDeleteTemplateArgs {
	return &AgentServiceDeleteTemplateArgs{}
}

func (p *AgentServiceDeleteTemplateArgs) InitDefault() {
	*p = AgentServiceDeleteTemplateArgs{}
}

var AgentServiceDeleteTemplateArgs_Req_DEFAULT *DeleteTemplateReq

func (p *AgentServiceDeleteTemplateArgs) GetReq() (v *DeleteTemplateReq) {
	if !p.IsSetReq() {
		return AgentServiceDeleteTemplateArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceDeleteTemplateArgs) SetReq(val *DeleteTemplateReq) {
	p.Req = val
}

func (p *AgentServiceDeleteTemplateArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceDeleteTemplateArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceDeleteTemplateArgs(%+v)", *p)
}
func (p *AgentServiceDeleteTemplateArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceDeleteTemplateResult struct {
	Success *DeleteTemplateRes `thrift:"success,0,optional" frugal:"0,optional,DeleteTemplateRes" json:"success,omitempty"`
}

func NewAgentServiceDeleteTemplateResult() *AgentServiceDeleteTemplateResult {
	return &AgentServiceDeleteTemplateResult{}
}

func (p *AgentServiceDeleteTemplateResult) InitDefault() {
	*p = AgentServiceDeleteTemplateResult{}
}

var AgentServiceDeleteTemplateResult_Success_DEFAULT *DeleteTemplateRes

func (p *AgentServiceDeleteTemplateResult) GetSuccess() (v *DeleteTemplateRes) {
	if !p.IsSetSuccess() {
		return AgentServiceDeleteTemplateResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceDeleteTemplateResult) SetSuccess(x interface{}) {
	p.Success = x.(*DeleteTemplateRes)
}

func (p *AgentServiceDeleteTemplateResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceDeleteTemplateResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceDeleteTemplateResult(%+v)", *p)
}
func (p *AgentServiceDeleteTemplateResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceUpdateTemplateArgs struct {
	Req *UpdateTemplateReq `thrift:"req,1" frugal:"1,default,UpdateTemplateReq" json:"req"`
}

func NewAgentServiceUpdateTemplateArgs() *AgentServiceUpdateTemplateArgs {
	return &AgentServiceUpdateTemplateArgs{}
}

func (p *AgentServiceUpdateTemplateArgs) InitDefault() {
	*p = AgentServiceUpdateTemplateArgs{}
}

var AgentServiceUpdateTemplateArgs_Req_DEFAULT *UpdateTemplateReq

func (p *AgentServiceUpdateTemplateArgs) GetReq() (v *UpdateTemplateReq) {
	if !p.IsSetReq() {
		return AgentServiceUpdateTemplateArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceUpdateTemplateArgs) SetReq(val *UpdateTemplateReq) {
	p.Req = val
}

func (p *AgentServiceUpdateTemplateArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceUpdateTemplateArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceUpdateTemplateArgs(%+v)", *p)
}
func (p *AgentServiceUpdateTemplateArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceUpdateTemplateResult struct {
	Success *UpdateTemplateRes `thrift:"success,0,optional" frugal:"0,optional,UpdateTemplateRes" json:"success,omitempty"`
}

func NewAgentServiceUpdateTemplateResult() *AgentServiceUpdateTemplateResult {
	return &AgentServiceUpdateTemplateResult{}
}

func (p *AgentServiceUpdateTemplateResult) InitDefault() {
	*p = AgentServiceUpdateTemplateResult{}
}

var AgentServiceUpdateTemplateResult_Success_DEFAULT *UpdateTemplateRes

func (p *AgentServiceUpdateTemplateResult) GetSuccess() (v *UpdateTemplateRes) {
	if !p.IsSetSuccess() {
		return AgentServiceUpdateTemplateResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceUpdateTemplateResult) SetSuccess(x interface{}) {
	p.Success = x.(*UpdateTemplateRes)
}

func (p *AgentServiceUpdateTemplateResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceUpdateTemplateResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceUpdateTemplateResult(%+v)", *p)
}
func (p *AgentServiceUpdateTemplateResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceGetTemplatesArgs struct {
	Req *GetTemplatesReq `thrift:"req,1" frugal:"1,default,GetTemplatesReq" json:"req"`
}

func NewAgentServiceGetTemplatesArgs() *AgentServiceGetTemplatesArgs {
	return &AgentServiceGetTemplatesArgs{}
}

func (p *AgentServiceGetTemplatesArgs) InitDefault() {
	*p = AgentServiceGetTemplatesArgs{}
}

var AgentServiceGetTemplatesArgs_Req_DEFAULT *GetTemplatesReq

func (p *AgentServiceGetTemplatesArgs) GetReq() (v *GetTemplatesReq) {
	if !p.IsSetReq() {
		return AgentServiceGetTemplatesArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceGetTemplatesArgs) SetReq(val *GetTemplatesReq) {
	p.Req = val
}

func (p *AgentServiceGetTemplatesArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceGetTemplatesArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetTemplatesArgs(%+v)", *p)
}
func (p *AgentServiceGetTemplatesArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceGetTemplatesResult struct {
	Success *GetTemplatesRes `thrift:"success,0,optional" frugal:"0,optional,GetTemplatesRes" json:"success,omitempty"`
}

func NewAgentServiceGetTemplatesResult() *AgentServiceGetTemplatesResult {
	return &AgentServiceGetTemplatesResult{}
}

func (p *AgentServiceGetTemplatesResult) InitDefault() {
	*p = AgentServiceGetTemplatesResult{}
}

var AgentServiceGetTemplatesResult_Success_DEFAULT *GetTemplatesRes

func (p *AgentServiceGetTemplatesResult) GetSuccess() (v *GetTemplatesRes) {
	if !p.IsSetSuccess() {
		return AgentServiceGetTemplatesResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceGetTemplatesResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetTemplatesRes)
}

func (p *AgentServiceGetTemplatesResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceGetTemplatesResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetTemplatesResult(%+v)", *p)
}
func (p *AgentServiceGetTemplatesResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceAddTemplateItemArgs struct {
	Req *AddTemplateItemReq `thrift:"req,1" frugal:"1,default,AddTemplateItemReq" json:"req"`
}

func NewAgentServiceAddTemplateItemArgs() *AgentServiceAddTemplateItemArgs {
	return &AgentServiceAddTemplateItemArgs{}
}

func (p *AgentServiceAddTemplateItemArgs) InitDefault() {
	*p = AgentServiceAddTemplateItemArgs{}
}

var AgentServiceAddTemplateItemArgs_Req_DEFAULT *AddTemplateItemReq

func (p *AgentServiceAddTemplateItemArgs) GetReq() (v *AddTemplateItemReq) {
	if !p.IsSetReq() {
		return AgentServiceAddTemplateItemArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceAddTemplateItemArgs) SetReq(val *AddTemplateItemReq) {
	p.Req = val
}

func (p *AgentServiceAddTemplateItemArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceAddTemplateItemArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAddTemplateItemArgs(%+v)", *p)
}
func (p *AgentServiceAddTemplateItemArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceAddTemplateItemResult struct {
	Success *AddTemplateItemRes `thrift:"success,0,optional" frugal:"0,optional,AddTemplateItemRes" json:"success,omitempty"`
}

func NewAgentServiceAddTemplateItemResult() *AgentServiceAddTemplateItemResult {
	return &AgentServiceAddTemplateItemResult{}
}

func (p *AgentServiceAddTemplateItemResult) InitDefault() {
	*p = AgentServiceAddTemplateItemResult{}
}

var AgentServiceAddTemplateItemResult_Success_DEFAULT *AddTemplateItemRes

func (p *AgentServiceAddTemplateItemResult) GetSuccess() (v *AddTemplateItemRes) {
	if !p.IsSetSuccess() {
		return AgentServiceAddTemplateItemResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceAddTemplateItemResult) SetSuccess(x interface{}) {
	p.Success = x.(*AddTemplateItemRes)
}

func (p *AgentServiceAddTemplateItemResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceAddTemplateItemResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAddTemplateItemResult(%+v)", *p)
}
func (p *AgentServiceAddTemplateItemResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceDeleteTemplateItemArgs struct {
	Req *DeleteTemplateItemReq `thrift:"req,1" frugal:"1,default,DeleteTemplateItemReq" json:"req"`
}

func NewAgentServiceDeleteTemplateItemArgs() *AgentServiceDeleteTemplateItemArgs {
	return &AgentServiceDeleteTemplateItemArgs{}
}

func (p *AgentServiceDeleteTemplateItemArgs) InitDefault() {
	*p = AgentServiceDeleteTemplateItemArgs{}
}

var AgentServiceDeleteTemplateItemArgs_Req_DEFAULT *DeleteTemplateItemReq

func (p *AgentServiceDeleteTemplateItemArgs) GetReq() (v *DeleteTemplateItemReq) {
	if !p.IsSetReq() {
		return AgentServiceDeleteTemplateItemArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceDeleteTemplateItemArgs) SetReq(val *DeleteTemplateItemReq) {
	p.Req = val
}

func (p *AgentServiceDeleteTemplateItemArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceDeleteTemplateItemArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceDeleteTemplateItemArgs(%+v)", *p)
}
func (p *AgentServiceDeleteTemplateItemArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceDeleteTemplateItemResult struct {
	Success *DeleteTemplateItemRes `thrift:"success,0,optional" frugal:"0,optional,DeleteTemplateItemRes" json:"success,omitempty"`
}

func NewAgentServiceDeleteTemplateItemResult() *AgentServiceDeleteTemplateItemResult {
	return &AgentServiceDeleteTemplateItemResult{}
}

func (p *AgentServiceDeleteTemplateItemResult) InitDefault() {
	*p = AgentServiceDeleteTemplateItemResult{}
}

var AgentServiceDeleteTemplateItemResult_Success_DEFAULT *DeleteTemplateItemRes

func (p *AgentServiceDeleteTemplateItemResult) GetSuccess() (v *DeleteTemplateItemRes) {
	if !p.IsSetSuccess() {
		return AgentServiceDeleteTemplateItemResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceDeleteTemplateItemResult) SetSuccess(x interface{}) {
	p.Success = x.(*DeleteTemplateItemRes)
}

func (p *AgentServiceDeleteTemplateItemResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceDeleteTemplateItemResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceDeleteTemplateItemResult(%+v)", *p)
}
func (p *AgentServiceDeleteTemplateItemResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceUpdateTemplateItemArgs struct {
	Req *UpdateTemplateItemReq `thrift:"req,1" frugal:"1,default,UpdateTemplateItemReq" json:"req"`
}

func NewAgentServiceUpdateTemplateItemArgs() *AgentServiceUpdateTemplateItemArgs {
	return &AgentServiceUpdateTemplateItemArgs{}
}

func (p *AgentServiceUpdateTemplateItemArgs) InitDefault() {
	*p = AgentServiceUpdateTemplateItemArgs{}
}

var AgentServiceUpdateTemplateItemArgs_Req_DEFAULT *UpdateTemplateItemReq

func (p *AgentServiceUpdateTemplateItemArgs) GetReq() (v *UpdateTemplateItemReq) {
	if !p.IsSetReq() {
		return AgentServiceUpdateTemplateItemArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceUpdateTemplateItemArgs) SetReq(val *UpdateTemplateItemReq) {
	p.Req = val
}

func (p *AgentServiceUpdateTemplateItemArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceUpdateTemplateItemArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceUpdateTemplateItemArgs(%+v)", *p)
}
func (p *AgentServiceUpdateTemplateItemArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceUpdateTemplateItemResult struct {
	Success *UpdateTemplateItemRes `thrift:"success,0,optional" frugal:"0,optional,UpdateTemplateItemRes" json:"success,omitempty"`
}

func NewAgentServiceUpdateTemplateItemResult() *AgentServiceUpdateTemplateItemResult {
	return &AgentServiceUpdateTemplateItemResult{}
}

func (p *AgentServiceUpdateTemplateItemResult) InitDefault() {
	*p = AgentServiceUpdateTemplateItemResult{}
}

var AgentServiceUpdateTemplateItemResult_Success_DEFAULT *UpdateTemplateItemRes

func (p *AgentServiceUpdateTemplateItemResult) GetSuccess() (v *UpdateTemplateItemRes) {
	if !p.IsSetSuccess() {
		return AgentServiceUpdateTemplateItemResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceUpdateTemplateItemResult) SetSuccess(x interface{}) {
	p.Success = x.(*UpdateTemplateItemRes)
}

func (p *AgentServiceUpdateTemplateItemResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceUpdateTemplateItemResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceUpdateTemplateItemResult(%+v)", *p)
}
func (p *AgentServiceUpdateTemplateItemResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceGetTemplateItemsArgs struct {
	Req *GetTemplateItemsReq `thrift:"req,1" frugal:"1,default,GetTemplateItemsReq" json:"req"`
}

func NewAgentServiceGetTemplateItemsArgs() *AgentServiceGetTemplateItemsArgs {
	return &AgentServiceGetTemplateItemsArgs{}
}

func (p *AgentServiceGetTemplateItemsArgs) InitDefault() {
	*p = AgentServiceGetTemplateItemsArgs{}
}

var AgentServiceGetTemplateItemsArgs_Req_DEFAULT *GetTemplateItemsReq

func (p *AgentServiceGetTemplateItemsArgs) GetReq() (v *GetTemplateItemsReq) {
	if !p.IsSetReq() {
		return AgentServiceGetTemplateItemsArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceGetTemplateItemsArgs) SetReq(val *GetTemplateItemsReq) {
	p.Req = val
}

func (p *AgentServiceGetTemplateItemsArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceGetTemplateItemsArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetTemplateItemsArgs(%+v)", *p)
}
func (p *AgentServiceGetTemplateItemsArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceGetTemplateItemsResult struct {
	Success *GetTemplateItemsRes `thrift:"success,0,optional" frugal:"0,optional,GetTemplateItemsRes" json:"success,omitempty"`
}

func NewAgentServiceGetTemplateItemsResult() *AgentServiceGetTemplateItemsResult {
	return &AgentServiceGetTemplateItemsResult{}
}

func (p *AgentServiceGetTemplateItemsResult) InitDefault() {
	*p = AgentServiceGetTemplateItemsResult{}
}

var AgentServiceGetTemplateItemsResult_Success_DEFAULT *GetTemplateItemsRes

func (p *AgentServiceGetTemplateItemsResult) GetSuccess() (v *GetTemplateItemsRes) {
	if !p.IsSetSuccess() {
		return AgentServiceGetTemplateItemsResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceGetTemplateItemsResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetTemplateItemsRes)
}

func (p *AgentServiceGetTemplateItemsResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceGetTemplateItemsResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetTemplateItemsResult(%+v)", *p)
}
func (p *AgentServiceGetTemplateItemsResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceUpdateTasksArgs struct {
	Req *UpdateTasksReq `thrift:"req,1" frugal:"1,default,UpdateTasksReq" json:"req"`
}

func NewAgentServiceUpdateTasksArgs() *AgentServiceUpdateTasksArgs {
	return &AgentServiceUpdateTasksArgs{}
}

func (p *AgentServiceUpdateTasksArgs) InitDefault() {
	*p = AgentServiceUpdateTasksArgs{}
}

var AgentServiceUpdateTasksArgs_Req_DEFAULT *UpdateTasksReq

func (p *AgentServiceUpdateTasksArgs) GetReq() (v *UpdateTasksReq) {
	if !p.IsSetReq() {
		return AgentServiceUpdateTasksArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceUpdateTasksArgs) SetReq(val *UpdateTasksReq) {
	p.Req = val
}

func (p *AgentServiceUpdateTasksArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceUpdateTasksArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceUpdateTasksArgs(%+v)", *p)
}
func (p *AgentServiceUpdateTasksArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceUpdateTasksResult struct {
	Success *UpdateTasksRes `thrift:"success,0,optional" frugal:"0,optional,UpdateTasksRes" json:"success,omitempty"`
}

func NewAgentServiceUpdateTasksResult() *AgentServiceUpdateTasksResult {
	return &AgentServiceUpdateTasksResult{}
}

func (p *AgentServiceUpdateTasksResult) InitDefault() {
	*p = AgentServiceUpdateTasksResult{}
}

var AgentServiceUpdateTasksResult_Success_DEFAULT *UpdateTasksRes

func (p *AgentServiceUpdateTasksResult) GetSuccess() (v *UpdateTasksRes) {
	if !p.IsSetSuccess() {
		return AgentServiceUpdateTasksResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceUpdateTasksResult) SetSuccess(x interface{}) {
	p.Success = x.(*UpdateTasksRes)
}

func (p *AgentServiceUpdateTasksResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceUpdateTasksResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceUpdateTasksResult(%+v)", *p)
}
func (p *AgentServiceUpdateTasksResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceAddTokenArgs struct {
	Req *AddTokenReq `thrift:"req,1" frugal:"1,default,AddTokenReq" json:"req"`
}

func NewAgentServiceAddTokenArgs() *AgentServiceAddTokenArgs {
	return &AgentServiceAddTokenArgs{}
}

func (p *AgentServiceAddTokenArgs) InitDefault() {
	*p = AgentServiceAddTokenArgs{}
}

var AgentServiceAddTokenArgs_Req_DEFAULT *AddTokenReq

func (p *AgentServiceAddTokenArgs) GetReq() (v *AddTokenReq) {
	if !p.IsSetReq() {
		return AgentServiceAddTokenArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceAddTokenArgs) SetReq(val *AddTokenReq) {
	p.Req = val
}

func (p *AgentServiceAddTokenArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceAddTokenArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAddTokenArgs(%+v)", *p)
}
func (p *AgentServiceAddTokenArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceAddTokenResult struct {
	Success *AddTokenRes `thrift:"success,0,optional" frugal:"0,optional,AddTokenRes" json:"success,omitempty"`
}

func NewAgentServiceAddTokenResult() *AgentServiceAddTokenResult {
	return &AgentServiceAddTokenResult{}
}

func (p *AgentServiceAddTokenResult) InitDefault() {
	*p = AgentServiceAddTokenResult{}
}

var AgentServiceAddTokenResult_Success_DEFAULT *AddTokenRes

func (p *AgentServiceAddTokenResult) GetSuccess() (v *AddTokenRes) {
	if !p.IsSetSuccess() {
		return AgentServiceAddTokenResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceAddTokenResult) SetSuccess(x interface{}) {
	p.Success = x.(*AddTokenRes)
}

func (p *AgentServiceAddTokenResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceAddTokenResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAddTokenResult(%+v)", *p)
}
func (p *AgentServiceAddTokenResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceDeleteTokenArgs struct {
	Req *DeleteTokenReq `thrift:"req,1" frugal:"1,default,DeleteTokenReq" json:"req"`
}

func NewAgentServiceDeleteTokenArgs() *AgentServiceDeleteTokenArgs {
	return &AgentServiceDeleteTokenArgs{}
}

func (p *AgentServiceDeleteTokenArgs) InitDefault() {
	*p = AgentServiceDeleteTokenArgs{}
}

var AgentServiceDeleteTokenArgs_Req_DEFAULT *DeleteTokenReq

func (p *AgentServiceDeleteTokenArgs) GetReq() (v *DeleteTokenReq) {
	if !p.IsSetReq() {
		return AgentServiceDeleteTokenArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceDeleteTokenArgs) SetReq(val *DeleteTokenReq) {
	p.Req = val
}

func (p *AgentServiceDeleteTokenArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceDeleteTokenArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceDeleteTokenArgs(%+v)", *p)
}
func (p *AgentServiceDeleteTokenArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceDeleteTokenResult struct {
	Success *DeleteTokenRes `thrift:"success,0,optional" frugal:"0,optional,DeleteTokenRes" json:"success,omitempty"`
}

func NewAgentServiceDeleteTokenResult() *AgentServiceDeleteTokenResult {
	return &AgentServiceDeleteTokenResult{}
}

func (p *AgentServiceDeleteTokenResult) InitDefault() {
	*p = AgentServiceDeleteTokenResult{}
}

var AgentServiceDeleteTokenResult_Success_DEFAULT *DeleteTokenRes

func (p *AgentServiceDeleteTokenResult) GetSuccess() (v *DeleteTokenRes) {
	if !p.IsSetSuccess() {
		return AgentServiceDeleteTokenResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceDeleteTokenResult) SetSuccess(x interface{}) {
	p.Success = x.(*DeleteTokenRes)
}

func (p *AgentServiceDeleteTokenResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceDeleteTokenResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceDeleteTokenResult(%+v)", *p)
}
func (p *AgentServiceDeleteTokenResult) GetResult() interface{} {
	return p.Success
}

type AgentServiceGetTokenArgs struct {
	Req *GetTokenReq `thrift:"req,1" frugal:"1,default,GetTokenReq" json:"req"`
}

func NewAgentServiceGetTokenArgs() *AgentServiceGetTokenArgs {
	return &AgentServiceGetTokenArgs{}
}

func (p *AgentServiceGetTokenArgs) InitDefault() {
	*p = AgentServiceGetTokenArgs{}
}

var AgentServiceGetTokenArgs_Req_DEFAULT *GetTokenReq

func (p *AgentServiceGetTokenArgs) GetReq() (v *GetTokenReq) {
	if !p.IsSetReq() {
		return AgentServiceGetTokenArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *AgentServiceGetTokenArgs) SetReq(val *GetTokenReq) {
	p.Req = val
}

func (p *AgentServiceGetTokenArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *AgentServiceGetTokenArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetTokenArgs(%+v)", *p)
}
func (p *AgentServiceGetTokenArgs) GetFirstArgument() interface{} {
	return p.Req
}

type AgentServiceGetTokenResult struct {
	Success *GetTokenRes `thrift:"success,0,optional" frugal:"0,optional,GetTokenRes" json:"success,omitempty"`
}

func NewAgentServiceGetTokenResult() *AgentServiceGetTokenResult {
	return &AgentServiceGetTokenResult{}
}

func (p *AgentServiceGetTokenResult) InitDefault() {
	*p = AgentServiceGetTokenResult{}
}

var AgentServiceGetTokenResult_Success_DEFAULT *GetTokenRes

func (p *AgentServiceGetTokenResult) GetSuccess() (v *GetTokenRes) {
	if !p.IsSetSuccess() {
		return AgentServiceGetTokenResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceGetTokenResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetTokenRes)
}

func (p *AgentServiceGetTokenResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceGetTokenResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetTokenResult(%+v)", *p)
}
func (p *AgentServiceGetTokenResult) GetResult() interface{} {
	return p.Success
}
